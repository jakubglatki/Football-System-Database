-- MySQL Script generated by MySQL Workbench
-- Thu Nov  7 19:38:45 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema fldb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fldb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fldb` DEFAULT CHARACTER SET utf8 ;
USE `fldb` ;

-- -----------------------------------------------------
-- Table `fldb`.`League`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`League` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `numberOfTeams` INT NOT NULL,
  `level` INT NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;

delimiter //
CREATE TRIGGER leagueMumberOfTeams BEFORE INSERT ON League
       FOR EACH ROW
       BEGIN
           IF NEW.numberOfTeams < 4 THEN
               SET NEW.numberOfTeams = 4;
           END IF;
       END;//
delimiter ;

delimiter //
CREATE TRIGGER uLeagueMumberOfTeams BEFORE UPDATE ON League
       FOR EACH ROW
       BEGIN
           IF NEW.numberOfTeams < 4 THEN
               SET NEW.numberOfTeams = 4;
           END IF;
       END;//
delimiter ;
-- -----------------------------------------------------
-- Table `fldb`.`Stadium`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Stadium` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `capacity` INT NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fldb`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `League_id` INT NOT NULL,
  `Stadium_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `numberOfPlayers` INT NOT NULL,
  `position` INT NOT NULL,
  `capitanName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Team_League_idx` (`League_id` ASC) VISIBLE,
  INDEX `fk_Team_Stadium1_idx` (`Stadium_id` ASC) VISIBLE,
  CONSTRAINT `fk_Team_League`
    FOREIGN KEY (`League_id`)
    REFERENCES `fldb`.`League` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Team_Stadium1`
    FOREIGN KEY (`Stadium_id`)
    REFERENCES `fldb`.`Stadium` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

delimiter //
CREATE TRIGGER teamNumberOfPlayers BEFORE INSERT ON Team
       FOR EACH ROW
       BEGIN
           IF NEW.numberOfPlayers < 15 THEN
               SET NEW.numberOfPlayers = 15;
           END IF;
       END;//
delimiter ;

delimiter //
CREATE TRIGGER uteamNumberOfPlayers BEFORE UPDATE ON Team
       FOR EACH ROW
       BEGIN
           IF NEW.numberOfPlayers < 15 THEN
               SET NEW.numberOfPlayers = 15;
           END IF;
       END;//
delimiter ;
-- -----------------------------------------------------
-- Table `fldb`.`Player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Player` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Team_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  `number` INT NOT NULL,
  `salary` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Player_Team1_idx` (`Team_id` ASC) VISIBLE,
  CONSTRAINT `fk_Player_Team1`
    FOREIGN KEY (`Team_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `fldb`.`Coach`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Coach` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Team_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `role` VARCHAR(45) NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  `salary` INT NOT NULL,
  `contractLength` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Coach_Team1_idx` (`Team_id` ASC) VISIBLE,
  CONSTRAINT `fk_Coach_Team1`
    FOREIGN KEY (`Team_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fldb`.`Owner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Owner` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Team_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  `value` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Owner_Team1_idx` (`Team_id` ASC) VISIBLE,
  CONSTRAINT `fk_Owner_Team1`
    FOREIGN KEY (`Team_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fldb`.`Game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`Game` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Team_home_id` INT NOT NULL,
  `Team_away_id` INT NOT NULL,
  `League_id` INT NOT NULL,
  `homeGoals` INT NOT NULL,
  `awayGoals` INT NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Game_Team1_idx` (`Team_home_id` ASC) VISIBLE,
  INDEX `fk_Game_Team2_idx` (`Team_away_id` ASC) VISIBLE,
  INDEX `fk_Game_League1_idx` (`League_id` ASC) VISIBLE,
  CONSTRAINT `fk_Game_Team1`
    FOREIGN KEY (`Team_home_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_Team2`
    FOREIGN KEY (`Team_away_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_League1`
    FOREIGN KEY (`League_id`)
    REFERENCES `fldb`.`League` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fldb`.`PlayerStats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`PlayerStats` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Player_id` INT NOT NULL,
  `apperances` INT NOT NULL,
  `minutesPlayed` INT NOT NULL,
  `goals` INT NOT NULL,
  `assists` INT NOT NULL,
  `contractLenght` DATETIME NOT NULL,
  `yellowCards` INT NOT NULL,
  `redCards` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_PlayerStats_Player1_idx` (`Player_id` ASC) VISIBLE,
  CONSTRAINT `fk_PlayerStats_Player1`
    FOREIGN KEY (`Player_id`)
    REFERENCES `fldb`.`Player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

delimiter //
CREATE TRIGGER deletePlayerStats BEFORE DELETE ON Player
       FOR EACH ROW
       BEGIN
       DECLARE PlayerId INT;
       SET PlayerId = old.id;
           DELETE FROM PlayerStats WHERE PlayerStats.Player_id = PlayerId;
       END;//
delimiter ;

-- drop trigger createStatsForPlayer;

delimiter // 
CREATE TRIGGER createStatsForPlayer BEFORE INSERT ON Player
	FOR EACH ROW
	BEGIN
    DECLARE newId int;
	DECLARE apperances INT;
	DECLARE minutesPlayed INT;
	DECLARE goals INT;
	DECLARE assists INT;
	DECLARE contractLenght DATETIME;
	DECLARE yellowCards INT;
	DECLARE redCards INT;
    DECLARE player_id int;
    
	DECLARE PlayerStatsCursor CURSOR FOR SELECT id FROM PlayerStats ORDER BY id DESC;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET newId = -1;
    
Open PlayerStatsCursor;
    FETCH PlayerStatsCursor INTO newId;


	SET apperances = 0;
    SET minutesPlayed = 0;
    SET goals=0;
    SET assists=0;
    SET contractLenght = '2019-12-31 00:00:00';
    SET yellowCards=0;
    SET redCards=0;
    
    INSERT INTO playerstats(Player_id, apperances, minutesPlayed, goals, assists, contractLenght, yellowCards, redCards)
    VALUES (Player_id, apperances, minutesPlayed, goals, assists, contractLenght, yellowCards, redCards);
    
    Close PlayerStatsCursor;
	END;//
delimiter;
-- -----------------------------------------------------
-- Table `fldb`.`TeamStats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`TeamStats` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Team_id` INT NOT NULL,
  `points` INT NOT NULL,
  `goalsScored` INT NOT NULL,
  `goalsAgainst` INT NOT NULL,
  `goalsDifference` INT NOT NULL,
  `cleanSheets` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TeamStats_Team1_idx` (`Team_id` ASC) VISIBLE,
  CONSTRAINT `fk_TeamStats_Team1`
    FOREIGN KEY (`Team_id`)
    REFERENCES `fldb`.`Team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

delimiter //
CREATE TRIGGER deleteTeamStats BEFORE DELETE ON Team
       FOR EACH ROW
       BEGIN
       DECLARE TeamId INT;
       SET TeamId = old.id;
           DELETE FROM TeamStats WHERE TeamStats.Team_id = TeamId;
       END;//
delimiter ;

-- drop trigger createStatsForTeam;

delimiter // 
CREATE TRIGGER createStatsForTeam BEFORE INSERT ON Team
	FOR EACH ROW
	BEGIN
    DECLARE newId int;
	DECLARE points INT;
	DECLARE goalsScored INT;
	DECLARE goalsAgainst INT;
	DECLARE goalsDifference INT;
	DECLARE cleanSheets INT;
    
	DECLARE TeamStatsCursor CURSOR FOR SELECT id FROM TeamStats ORDER BY id DESC;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET newId = -1;
    
Open TeamStatsCursor;
    FETCH TeamStatsCursor INTO newId;


	SET points = 0;
    SET goalsScored = 0;
    SET goalsAgainst=0;
    SET goalsDifference=0;
    SET cleanSheets=0;

    
    INSERT INTO teamstats(Team_id, points, goalsScored, goalsAgainst, goalsDifference, cleanSheets)
    VALUES (newId, points, goalsScored, goalsAgainst, goalsDifference, cleanSheets);
    
    Close TeamStatsCursor;
	END;
delimiter;
-- -----------------------------------------------------
-- Table `fldb`.`GameEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fldb`.`GameEvent` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Game_id` INT NOT NULL,
  `Player_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `minute` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_GameEvent_Game1_idx` (`Game_id` ASC) VISIBLE,
  INDEX `fk_GameEvent_Player1_idx` (`Player_id` ASC) VISIBLE,
  CONSTRAINT `fk_GameEvent_Game1`
    FOREIGN KEY (`Game_id`)
    REFERENCES `fldb`.`Game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GameEvent_Player1`
    FOREIGN KEY (`Player_id`)
    REFERENCES `fldb`.`Player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

